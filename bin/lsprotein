#!/usr/bin/env python3

# lsprotein - Main source file of lsprotein
# Written by Ercan Ersoy (http://ercanersoy.net).

import sys
import urllib3
import lsprotein.help
from bs4 import BeautifulSoup

if __name__ == '__main__':
    if len(sys.argv) == 1:
        lsprotein.help.print_help_information()

    for parameter_index in range(1, len(sys.argv)):
        parameter = sys.argv[parameter_index]

        if parameter == '-h' or parameter == '--help':
            lsprotein.help.print_help_information()

        if parameter == '-v' or parameter == '--version':
            lsprotein.version.print_version_information()

        if len(parameter) != 4:
            print('Protein Id character length must equal four.')
            sys.exit(1)

        pool_manager = urllib3.PoolManager()

        request = pool_manager.request('GET', 'http://www.rcsb.org' +
                                       '/pdb/rest/describePDB' +
                                       '?structureId=' + parameter)

        if request.status != 200:
            print('HTTP Error: ' + request.status)
            sys.exit(2)

        bs = BeautifulSoup(request.data, 'lxml-xml')

        try:
            pdb = bs.find_all('PDB')[0]
        except IndexError:
            print('Specified id not found.')
            break

        try:
            print('Strcuture PDB Id:', pdb['structureId'])
        except NameError:
            print('Strcuture PDB Id: Not found')

        try:
            print('Strcuture PDB Title:', pdb['title'])
        except NameError:
            print('Strcuture PDB Title: Not found')

        try:
            print('Pubmed Id:', pdb['pubmedId'])
        except NameError:
            print('Pubmed Id: Not found')

        ids = bs.find_all('relatedPDB')

        try:
            for i in range(0, len(ids)):
                print('Related PDB Id: ', str(ids[i]['pdbId']))
        except NameError:
            print('Related PDB Id: Not found')

        print()
